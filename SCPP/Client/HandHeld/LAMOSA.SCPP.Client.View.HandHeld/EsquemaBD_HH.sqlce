-----------------------------------------------------------------------------------
drop table [config_handheld];
drop table [config_banco];
drop table [maquina];
drop table [tipo_maquina];
drop table [area];

drop table [proceso_pantalla];
drop table [SCPP_pantalla];
drop table [turno];
drop table [rol_planta];
drop table [usuario];
drop table [rol];
drop table [empleado];
drop table [puesto];
drop table [centro_trabajo];
drop table [proceso];
drop table [planta];
drop table [almacen];
drop table [configuracion];
drop table [registro_solicitud];
drop table [metodo];
--------------------------------------------------------------------
-- metodo.
create table [metodo]
(
	cod_metodo				int				not null,
	des_metodo				nvarchar(255)	not null
);
alter table [metodo]
add constraint pk_metodo primary key (cod_metodo);

-- registro_solicitud.
create table [registro_solicitud]
(
	cod_registro			bigint			not null identity(1,1),
	cod_metodo				int				not null,
	fecha_hora_solicitud	datetime		not null,
	parametros				nvarchar(1000)	null,
	ejecucion_exitosa		bit				not null,
	error					nvarchar(2000)	null
);
alter table [registro_solicitud]
add constraint pk_registro_solicitud primary key (cod_registro);
alter table [registro_solicitud]
add constraint fk01_registro_solicitud foreign key (cod_metodo) references metodo (cod_metodo);

-- configuracion.
create table [configuracion]
(
	cod_configuracion		int				not null,
	des_configuracion		nvarchar(50)	not null,
	valor_configuracion		int				not null default 0
);
alter table [configuracion]
add constraint pk_configuracion primary key (cod_configuracion);

-- almacen.
create table [almacen]
(
	cod_almacen			int				not null,
	des_almacen			nvarchar(100)	not null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [almacen]
add constraint pk_almacen primary key (cod_almacen);

-- planta.
create table [planta]
(
	cod_planta			int				not null,
	des_planta			nvarchar(100)	not null,
	cod_almacen			int				not null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [planta]
add constraint pk_planta primary key (cod_planta);
alter table [planta]
add constraint fk01_planta foreign key (cod_almacen) references [almacen] (cod_almacen);

-- proceso.
create table [proceso]
(
	cod_proceso			int				not null,
	des_proceso			nvarchar(100)	not null,
	interfase_MFG		bit				null,
	requerido			bit				null,
	cod_proceso_padre	int				null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [proceso]
add constraint pk_proceso primary key (cod_proceso);
alter table [proceso]
add constraint fk01_proceso foreign key (cod_proceso_padre) references [proceso] (cod_proceso);

-- centro_trabajo.
create table [centro_trabajo]
(
	cod_centro_trabajo		int				not null,
	des_centro_trabajo		nvarchar(100)	not null,
	cod_planta				int				not null,
	cod_proceso				int				not null,
	linea_produccion		nvarchar(50)	not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null
);
alter table [centro_trabajo]
add constraint pk_centro_trabajo primary key (cod_centro_trabajo);
alter table [centro_trabajo]
add constraint fk01centro_trabajo foreign key (cod_planta) references [planta] (cod_planta);
alter table [centro_trabajo]
add constraint fk02_centro_trabajo foreign key (cod_proceso) references [proceso] (cod_proceso);

-- puesto.
create table [puesto]
(
	cod_puesto			int				not null,
	des_puesto			nvarchar(100)	not null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [puesto]
add constraint pk_puesto primary key (cod_puesto);

-- empleado.
create table [empleado]
(
	cod_empleado			int				not null,
	clave_empleado_MFG		int				not null,
	clave_empleado_nomina	int				not null,
	nombre					nvarchar(100)	not null,
	ap_paterno				nvarchar(100)	not null,
	ap_materno				nvarchar(100)	not null,
	cod_puesto				int				not null,
	cod_centro_trabajo		int				not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null
);
alter table [empleado]
add constraint pk_empleado primary key (cod_empleado);
alter table [empleado]
add constraint un01_empleado unique (clave_empleado_MFG);
alter table [empleado]
add constraint un02_empleado unique (clave_empleado_nomina);
alter table [empleado]
add constraint fk01_empleado foreign key (cod_puesto) references [puesto] (cod_puesto);
alter table [empleado]
add constraint fk02_empleado foreign key (cod_centro_trabajo) references [centro_trabajo] (cod_centro_trabajo);

-- rol.
create table [rol]
(
	cod_rol				int					not null,
	des_rol				nvarchar(100)		not null,
	fecha_registro		datetime			not null,
	fecha_baja			datetime			null
);
alter table [rol]
add constraint pk_rol primary key (cod_rol);

-- usuario.
create table [usuario]
(
	cod_usuario				int				not null,
	login					nvarchar(10)	not null,
	password				nvarchar(10)	not null,
	cod_empleado			int				not null,
	cod_rol					int				not null,
	cod_supervisor			int				null,
	num_intentos			smallint		not null default 0,
	bloqueado				bit				not null default 0,
	email					nvarchar(255)	null,
	fecha_vig_password		datetime		not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null
);
alter table [usuario]
add constraint pk_usuario primary key (cod_usuario);
alter table [usuario]
add constraint fk01_usuario foreign key (cod_empleado) references [empleado] (cod_empleado);
alter table [usuario]
add constraint fk02_usuario foreign key (cod_rol) references [rol] (cod_rol);
alter table [usuario]
add constraint fk03_usuario foreign key (cod_supervisor) references [empleado] (cod_empleado);

-- rol_planta.
create table [rol_planta]
(
	cod_rol				int				not null,
	cod_planta			int				not null
);
alter table [rol_planta]
add constraint pk_rol_planta primary key (cod_rol, cod_planta);
alter table [rol_planta]
add constraint fk01_rol_planta foreign key (cod_rol) references [rol] (cod_rol);
alter table [rol_planta]
add constraint fk02_rol_planta foreign key (cod_planta) references [planta] (cod_planta);

-- turno.
create table [turno]
(
	cod_turno			int				not null,
	des_turno			nvarchar(100)	not null,
	hora_inicio			datetime		not null,
	hora_fin			datetime		not null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [turno]
add constraint pk_turno primary key (cod_turno);

-- SCPP_pantalla.
create table [SCPP_pantalla]
(
	cod_pantalla		int				not null,
	des_pantalla		nvarchar(100)	not null,
	fecha_registro		datetime		not null,
	fecha_baja			datetime		null
);
alter table [SCPP_pantalla]
add constraint pk_SCPP_pantalla primary key (cod_pantalla);

-- proceso_pantalla
create table [proceso_pantalla]
(
	cod_proceso			int				not null,
	cod_pantalla		int				not null
);
alter table [proceso_pantalla]
add constraint pk_proceso_pantalla primary key (cod_proceso, cod_pantalla);
alter table [proceso_pantalla]
add constraint fk01_proceso_pantalla foreign key (cod_proceso) references [proceso] (cod_proceso);
alter table [proceso_pantalla]
add constraint fk02_proceso_pantalla foreign key (cod_pantalla) references [SCPP_pantalla] (cod_pantalla);


-- area
create table [area]
(
	cod_area				int				not null,
	des_area				nvarchar(100)	not null,
	cod_centro_trabajo		int				not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null
);
alter table [area]
add constraint pk_area primary key (cod_area);
alter table [area]
add constraint fk01_area foreign key (cod_centro_trabajo) references [centro_trabajo] (cod_centro_trabajo);

-- tipo_maquina
create table [tipo_maquina]
(
	cod_tipo_maquina		int				not null,
	des_tipo_maquina		nvarchar(100)	not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null
);
alter table [tipo_maquina]
add constraint pk_tipo_maquina primary key (cod_tipo_maquina);

-- maquina
create table [maquina]
(
	cod_maquina				int				not null,
	clave_maquina			nvarchar(10)	null,
	des_maquina				nvarchar(100)	not null,
	cod_area				int				not null,
	cod_tipo_maquina		int				not null,
	fecha_registro			datetime		not null,
	fecha_baja				datetime		null,
	horno_quemada_mes		int				null,
	horno_quemada_fecha		datetime		null
);
alter table [maquina]
add constraint pk_maquina primary key (cod_maquina);
alter table [maquina]
add constraint fk01_maquina foreign key (cod_area) references [area] (cod_area);
alter table [maquina]
add constraint fk02_maquina foreign key (cod_tipo_maquina) references [tipo_maquina] (cod_tipo_maquina);

-- config_banco
create table [config_banco]
(
	cod_config_banco		int				not null,
	cod_maquina				int				not null,
	cod_usuario_alta		int				not null,
	cod_usuario_autoriza	int				null,
	fecha_autorizacion		datetime		null,
	fecha_inicio			datetime		not null,
	fecha_fin				datetime		null
);
alter table [config_banco]
add constraint pk_config_banco primary key (cod_config_banco);
alter table [config_banco]
add constraint fk01_config_banco foreign key (cod_maquina) references [maquina] (cod_maquina);
alter table [config_banco]
add constraint fk02_config_banco foreign key (cod_usuario_alta) references [usuario] (cod_usuario);
alter table [config_banco]
add constraint fk03_config_banco foreign key (cod_usuario_autoriza) references [usuario] (cod_usuario);

-- config_handheld
create table [config_handheld]
(
	cod_config_handheld		bigint		not null,
	cod_usuario				int			not null,
	cod_operador			int			not null,
	cod_supervisor			int			not null,
	fecha					datetime	not null,
	cod_turno				int			not null,
	cod_proceso				int			not null,
	cod_config_banco		int			null
);
alter table [config_handheld]
add constraint pk_config_handheld primary key (cod_config_handheld);

alter table [config_handheld]
add constraint fk01_config_handheld foreign key (cod_usuario) references [usuario] (cod_usuario);
alter table [config_handheld]
add constraint fk02_config_handheld foreign key (cod_operador) references [empleado] (cod_empleado);
alter table [config_handheld]
add constraint fk03_config_handheld foreign key (cod_supervisor) references [empleado] (cod_empleado);
alter table [config_handheld]
add constraint fk04_config_handheld foreign key (cod_turno) references [turno] (cod_turno);
alter table [config_handheld]
add constraint fk05_config_handheld foreign key (cod_proceso) references [proceso] (cod_proceso);
alter table [config_handheld]
add constraint fk06_config_handheld foreign key (cod_config_banco) references [config_banco] (cod_config_banco);

--------------------------------------------------------------------
-- Consultas.

-- ObtenerUsuario.
select	u.cod_usuario as CodUsuario,
		u.login as Login,
		u.password as Password,
		u.cod_empleado as CodEmpleado,
		(e.nombre + ' ' + e.ap_paterno + ' ' + e.ap_materno) as NomEmpleado,
		u.cod_rol as CodRol,
		r.des_rol as DesRol,
		e.cod_puesto as CodPuesto,
		p.des_puesto as DesPuesto,
		u.bloqueado as Bloqueado,
		u.fecha_vig_password as FechaVigPassword
from	usuario u,
		empleado e,
		rol r,
		puesto p
where		u.cod_empleado = e.cod_empleado
		and	u.cod_rol = r.cod_rol
		and	e.cod_puesto = p.cod_puesto
		and	u.fecha_baja is null
		and	u.login = 'egomez';

-- ObtenerDiasAvisoVigPass.
select	c.valor_configuracion as DiasAvisoVigPass
from	configuracion c
where		c.cod_configuracion = 3;

-- ReiniciarContadorIntentos.
update	usuario
set		num_intentos = 0
where		cod_usuario = 1;

-- IncrementarContadorIntentos.
update	usuario
set		num_intentos = num_intentos + 1
where		cod_usuario = 1;

-- ObtenerNumIntentosConfigurados.
select	c.valor_configuracion as NumIntentosConfig
from	configuracion c
where		c.cod_configuracion = 1;

-- ObtenerNumIntentosUsuario.
select	u.num_intentos as NumIntentosUsuario
from	usuario u
where		u.cod_usuario = 1;

-- BloquearUsuario.
update	usuario
set		num_intentos	= 0,
		bloqueado		= 1
where		cod_usuario = 1;

-- ObtenerPlantasRol.
select	rp.cod_planta as CodPlanta,
		p.des_planta as DesPlanta
from	rol_planta rp,
		planta p
where		rp.cod_planta = p.cod_planta
		and	rp.cod_rol = 1
order by	p.des_planta asc;

--------------------------------------------------------------------
-- Configuracion Inicial

-- ObtenerTurnos
select	t.cod_turno as CodTurno,
		t.des_turno as DesTurno
from	turno t
where		t.fecha_baja is null
order by	t.des_turno asc;

-- ObtenerProcesos
select	p.cod_proceso as CodProceso,
		p.des_proceso as DesProceso
from	proceso p
where		fecha_baja is null
order by	p.cod_proceso asc;

-- ObtenerPantallasProceso
select	pp.cod_pantalla as CodPantalla,
		p.des_pantalla as DesPantalla
from	proceso_pantalla pp,
		SCPP_pantalla p
where		pp.cod_pantalla = p.cod_pantalla
		and	pp.cod_proceso = @CodProceso
order by	p.cod_pantalla asc;

-- ObtenerSigCodConfigHandHeld
select	((case when max(ch.cod_config_handheld) is null then 0 else max(ch.cod_config_handheld) end) + 1) as CodConfigHandHeld
from	config_handheld ch;

select * from config_handheld;

-- InsertarConfigHandHeld
insert into config_handheld
(cod_config_handheld, cod_usuario, cod_operador, cod_supervisor, fecha, cod_turno, cod_proceso)
values (@CodConfigHandHeld, @CodUsuario, @CodOperador, @CodSupervisor, @Fecha , @CodTurno, @CodProceso);

--------------------------------------------------------------------

-- ValidarEmpleadoMFG.
select	e.cod_empleado as CodEmpleado
from	empleado e
where	e.clave_empleado_MFG = @ClaveEmpleadoMFG;


--------------------------------------------------------------------
-- Vaciado.





--------------------------------------------------------------------
-- Armado de Carro para Secador.

-- pieza.
create table [pieza]
(
	cod_pieza				int				not null,
	cod_barras				int				not null,
	cod_config_banco		int				null,
	cod_consecutivo			int				null,
	posicion				int				null,
	cod_articulo			int				null,
	cod_color				int				null,
	cod_calidad				int				null,
	cod_planta				int				not null
);
alter table [pieza]
add constraint pk_pieza primary key (cod_pieza);

-- carro_pieza.
create table [carro_pieza]
(
	cod_carro				int				not null,
	cod_pieza				int				not null
);
alter table [carro_pieza]
add constraint pk_carro_pieza primary key (cod_carro, cod_pieza);

-- ObtenerPiezasCarro
select	cp.cod_pieza as CodPieza
from	carro_pieza cp
where		cp.cod_carro = 1;

-- ObtenerCodPieza
select	cod_pieza as CodPieza
from	pieza p
where		p.cod_barras = 10;

-- ExistePiezaEnCarro
select	cp.cod_carro as CodCarro
from	carro_pieza cp
where		cp.cod_pieza = @CodPieza;

-- InsertarCarroPieza
insert into carro_pieza
(cod_carro, cod_pieza)
values (1, 10);

-- EliminarCarro
delete
from	carro_pieza
where		cod_carro = 1;

--------------------------------------------------------------------
-- Entrada de Carro al Secador.

-- ObtenerSecadores.
select	m.cod_maquina as CodMaquina,
		m.des_maquina as DesMaquina
from	centro_trabajo ct,
		area a,
		maquina m,
		config_banco cb
where		ct.cod_centro_trabajo = a.cod_centro_trabajo
		and	a.cod_area = m.cod_area
		and	m.cod_maquina = cb.cod_maquina
		and	ct.cod_planta = 20
		and	ct.cod_proceso = 2
		and ct.fecha_baja is null
		and a.fecha_baja is null
		and	m.cod_tipo_maquina = 2
		and m.fecha_baja is null
		and cb.cod_usuario_autoriza is not null
		and cb.fecha_inicio <= getdate()
		and cb.fecha_fin is null
order by	m.des_maquina asc;

--------------------------------------------------------------------



